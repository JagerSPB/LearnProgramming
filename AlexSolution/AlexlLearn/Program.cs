using System;

namespace AlexlLearn
{
    internal class Program
    {
        public static void Main(string[] args)
        {
            // Integer1◦. Дано расстояние L в сантиметрах. Используя операцию деления нацело,
            //       найти количество полных метров в нем (1 метр = 100 см).
            /*
             Console.WriteLine("Введите расстояние в см: ");
             int l = int.Parse(Console.ReadLine());
             Console.WriteLine($"метров: {l / 100}");
             */
            // Integer2◦. Дана масса M в килограммах.Используя операцию деления нацело,
            //       найти количество полных тонн в ней(1 тонна = 1000 кг).

            // Console.WriteLine("Введите вес в кг: ");
            // int kg = int.Parse(Console.ReadLine());
            // Console.WriteLine($"тонн: {kg / 1000}");

            // Integer3◦. Дан размер файла в байтах. Используя операцию деления нацело, 
            //      найти количество полных килобайтов, которые занимает данный файл (1 килобайт = 1024 байта).
            /*
            Console.WriteLine("размер файла в байт: ");
            int b = int.Parse(Console.ReadLine());
            Console.WriteLine($"полных килобайт: {b / 1024}");
            */
            // Integer4◦. Даны целые положительные числа A и B (A > B). На отрезке длины A размещено 
            //      максимально возможное количество отрезков длины B (без наложений). Используя операцию деления нацело,
            //      найти количество отрезков B, размещенных на отрезке A.
            /*
            int a = 19, b = 5;
            Console.WriteLine($"количество целых отрезков: {a / b}");
            */
            // Integer5◦. Даны целые положительные числа A и B (A > B). На отрезке длины A размещено максимально
            //     возможное количество отрезков длины B (без наложений). Используя операцию взятия остатка от деления 
            //     нацело, найти длину незанятой части отрезка A.
            /*           
            int a = 19, b = 5;
            Console.WriteLine($"длина незанятой части: {a % b}");           
            */
            // Integer6◦. Дано двузначное число. Вывести вначале его левую цифру (десятки), а затем — его правую цифру 
            //     (единицы). Для нахождения десятков использовать операцию деления нацело, 
            //     для нахождения единиц — операцию взятия остатка от деления.
            /*
            int a = 19;
            Console.WriteLine($"десятки: {a / 10}, еденицы; {a % 10}"); 
            */
            //Integer7◦. Дано двузначное число. Найти сумму и произведение его цифр.
            /*            
            int a = 42;
            Console.WriteLine($"сумма: {(a / 10) + (a % 10)}, произведение; {(a / 10) * (a % 10)}");
            */
            // Integer8◦. Дано двузначное число. Вывести число, полученное при переста-
            //     новке цифр исходного числа.
            /*
            int a = 98;
            Console.WriteLine($" результат {(a % 10)}{(a / 10)}");  
            */
            // Integer9◦. Дано трехзначное число. Используя одну операцию деления нацело,
            //     вывести первую цифру данного числа (сотни).            
            /*
            int a = 395;
            Console.WriteLine($"первая цифра: {a / 100}");
            */
            // Integer10◦. Дано трехзначное число. Вывести вначале его последнюю цифру
            //     (единицы), а затем — его среднюю цифру (десятки).    
            /*           
           int a = 649;
           Console.WriteLine($"последняя цифра: {a % 10}, средняя; {(a % 100) / 10}");
           */
            //Integer11◦. Дано трехзначное число. Найти сумму и произведение его цифр.  
            /*
            int a = 528;
            Console.WriteLine($"сумма ({(a / 100) + ((a % 100) / 10) + (a % 10)}), " +
                              $" произведение:{(a / 100) * ((a % 100) / 10) * (a % 10)} ");
            */
            // Integer12◦. Дано трехзначное число. Вывести число, полученное при прочтении
            //      исходного числа справа налево. 
            /*
            int a = 892;
            Console.WriteLine($" исходное: {a} \n результат: {(a / 100) + (((a % 100) / 10) * 10) + ((a % 10) * 100)} ");
            */
            // Integer13◦. Дано трехзначное число. В нем зачеркнули первую слева цифру и
            //     приписали ее справа. Вывести полученное число.
            /*
            int a = 432;
            Console.WriteLine($" исходное: {a} \n результат: {(a / 100) + (((a % 100) / 10) * 100) + ((a % 10) * 10)} ");
            */
            // Integer14◦. Дано трехзначное число. В нем зачеркнули первую справа цифру и приписали ее слева.
            //     Вывести полученное число.
            /*
            int a = 478;
            Console.WriteLine($" исходное: {a} \n результат: {((a / 100)*10) + ((a % 100) / 10) + ((a % 10) * 100)} ");
            */
            // Integer15◦. Дано трехзначное число. Вывести число, полученное при перестановке цифр сотен и десятков
            // исходного числа (например, 123 перейдет в 213).    
            /*
            int a = 123;
            Console.WriteLine($" исходное: {a} \n результат: {((a / 100)*10) + (((a % 100) / 10) *100) + ((a % 10) )} ");
            */
            // Integer16◦. Дано трехзначное число. Вывести число, полученное при перестановке цифр десятков и единиц
            // исходного числа (например, 123 перейдет в 132).
            /*
            int a = 123;
            Console.WriteLine($" исходное: {a} \n результат: {((a / 100)*100) + ((a % 100) / 10) + (a % 10) * 10} ");
            */
            // Integer17◦. Дано целое число, большее 999. Используя одну операцию деления нацело и одну операцию взятия
            //     остатка от деления, найти цифру, соответствующую разряду сотен в записи этого числа.  
            /*
            int a = 6956;
            Console.WriteLine($" исходное: {a} \n результат: {((a % 1000)  / 100)} ");
            */
            // Integer18◦. Дано целое число, большее 999. Используя одну операцию деления нацело и одну операцию взятия
            //     остатка от деления, найти цифру, соответствующую разряду тысяч в записи этого числа.
            /*
            int a = 4658;
           Console.WriteLine($" исходное: {a} \n результат: {((a % 10000)/1000 )} ");
           */
            // Integer19◦. С начала суток прошло N секунд (N — целое).
            // Найти количество полных минут, прошедших с начала суток.  
            /*
            Console.WriteLine("Введите кол-во секунд: ");
            int sec = int.Parse(Console.ReadLine());
            Console.WriteLine($"с начала суток прошло {sec / 60 } минут");
            */
            // Integer20◦. С начала суток прошло N секунд (N — целое). Найти количество полных часов,
            //     прошедших с начала суток.
            /*
            Console.WriteLine("Введите кол-во секунд: ");
            int sec = int.Parse(Console.ReadLine());
            Console.WriteLine($"с начала суток прошло {sec / 3600 } час");     
            */
            // Integer21◦. С начала суток прошло N секунд (N — целое). Найти количество секунд,
            //     прошедших с начала последней минуты.
            /*           
           Console.WriteLine("Введите кол-во секунд: ");
           int sec = int.Parse(Console.ReadLine());
           Console.WriteLine($"с начала последней минуты прошло {(sec % 60) } cek");
           */
            // Integer22◦. С начала суток прошло N секунд (N — целое). Найти количество секунд,
            //  прошедших с начала последнего часа.
            /*
            Console.WriteLine("Введите кол-во секунд: ");
            int sec = int.Parse(Console.ReadLine());
            Console.WriteLine($"с начала последнего часа прошло {(sec % 3600) } cek");           
            */
            // Integer23◦. С начала суток прошло N секунд (N — целое). Найти количество полных минут, 
            //     прошедших с начала последнего часа.
            /*
            Console.WriteLine("Введите кол-во секунд: ");
            int sec = int.Parse(Console.ReadLine());
            Console.WriteLine($"с начала последнего часа {(sec / 60) % 60} мин");
            */
            // Integer24◦. Дни недели пронумерованы следующим образом: 0 — воскресенье, 1 — понедельник, 2 — вторник, ..., 
            // 6 — суббота. Дано целое число K, лежащее в диапазоне 1–365. Определить номер дня недели для K-го дня года,
            //     если известно, что в этом году 1 января было понедельником.
            /*
            int k = 32;
            Console.WriteLine($" результат: {(k / 7) % 7} ");
            */
            // Integer29◦. Даны целые положительные числа A, B, C. На прямоугольнике размера A × B размещено максимально
            //     возможное количество квадратов со стороной C (без наложений). Найти количество квадратов, размещенных
            //     на прямоугольнике, а также площадь незанятой части прямоугольника.
            /*
            int a = 5, b = 4, c = 3;
            Console.WriteLine($"поместится {(a / c) * (b / c)} квадрат, не занятая площадь {(a % c) * (b % c)} ");
            */
            // Integer30◦. Дан номер некоторого года (целое положительное число). Определить соответствующий ему номер 
            //     столетия, учитывая, что, к примеру, началом 20 столетия был 1901 год.
            /*
            int a = 2023;
            Console.WriteLine($" {a} год это: {((a+100) / 100)} век");
            */
        }
    }
}